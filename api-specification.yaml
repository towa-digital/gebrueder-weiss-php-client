openapi: 3.0.0
info:
  title: Logistics Order
  description: API to create and retrieve logistics orders
  contact:
    name: API Support
    url: https://developer.my.gw-world.com/support
  version: 1.0.0
  x-category: logistics
  x-apiId: logisticsOrderCustomer
  x-audience: external partner
servers:
  - url: https://my.api.gw-world.com/logistics/logistics-order/1.0.0
paths:
  /logistics-order:
    post:
      summary: create a logisticsOrder
      description: posts an logisticsOrder structure to GW to create a new logisticsOrder
      parameters:
        - name: accept-language
          in: header
          description: set the response language, default is en-US - defines the language following the BCP 47 standard https://tools.ietf.org/html/bcp47
          required: false
          style: simple
          explode: false
          schema:
            $ref: '#/components/schemas/Language'
      requestBody:
        description: request body containing logisticsOrder and callback-url
        content:
          application/json:
            schema:
              type: object
              properties:
                logisticsOrder:
                  $ref: '#/components/schemas/LogisticsOrder'
                callbacks:
                  type: object
                  properties:
                    successCallback:
                      $ref: '#/components/schemas/CallbackUrl'
                    fulfillmentCallback:
                      $ref: '#/components/schemas/CallbackUrl'
                  description: set of callback URL for asynchronous event responses with different purpose
      responses:
        '202':
          description: Logistics order accepted, confirmation will be sent later
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      callbacks:
        onSuccess:
          '{$request.body.callbacks.successCallback}':
            post:
              requestBody:
                description: payload for the success event, logisticsOrder has been created
                content:
                  application/json:
                    schema:
                      required:
                        - customerOrder
                        - orderId
                        - status
                        - timestamp
                      type: object
                      properties:
                        orderId:
                          $ref: '#/components/schemas/GWOrderId'
                        customerOrder:
                          $ref: '#/components/schemas/Reference/properties/reference'
                        timestamp:
                          $ref: '#/components/schemas/DateTime'
                        transportProduct:
                          $ref: '#/components/schemas/TransportProduct/properties/product'
                        trackingUrl:
                          type: string
                          description: tracking link for this fulfilment, if transport is booked (no self-pickup)
                          format: url
                        status:
                          $ref: '#/components/schemas/EventCallback'
                required: true
              responses:
                '200':
                  description: Your server returns this code if it accepts the callback
        onFulfillment:
          '{$request.body.callbacks.fulfillmentCallback}':
            post:
              requestBody:
                description: payload for the success event, logisticsOrder has been created
                content:
                  application/json:
                    schema:
                      required:
                        - customerOrder
                        - orderId
                        - status
                        - timestamp
                        - transportProduct
                      type: object
                      properties:
                        orderId:
                          $ref: '#/components/schemas/GWOrderId'
                        customerOrder:
                          $ref: '#/components/schemas/Reference/properties/reference'
                        timestamp:
                          $ref: '#/components/schemas/DateTime'
                        transportProduct:
                          $ref: '#/components/schemas/TransportProduct/properties/product'
                        trackingUrl:
                          type: string
                          description: tracking link for this fulfilment, if transport is booked (no self-pickup)
                          format: url
                        status:
                          $ref: '#/components/schemas/EventCallback'
                required: true
              responses:
                '200':
                  description: Your server returns this code if it accepts the callback
      security:
        - default:
            - API_CUSAPI_LOGISTICS_ORDER_CREATE
      x-throttling-tier: 1KPerMin
  /logistics-order/{orderId}/current-status:
    get:
      summary: by identifying your logistics-order using the orderId in the path, you get the current status of the logistics-order
      operationId: getStatusByOrderId
      parameters:
        - name: orderId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            $ref: '#/components/schemas/GWOrderId'
        - name: calculateETA
          in: query
          description: includes the calculation of an ETA if it is a logistics order
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
        - name: accept-language
          in: header
          description: set the response language, default is en-US - defines the language following the BCP 47 standard https://tools.ietf.org/html/bcp47
          required: false
          style: simple
          explode: false
          schema:
            $ref: '#/components/schemas/Language'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCurrentStatus'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
      security:
        - default:
            - API_CUSAPI_LOGISTICS_ORDER_READ
      x-scope: API_LOGISTICS_ORDER_READ
      x-auth-type: Application & Application User
      x-throttling-tier: 1KPerMin
  /logistics-order/{orderId}/:
    get:
      summary: by identifying your logistics-order using the orderId in the path, you get the data of the logistics-order
      operationId: getLogisticsOrderByOrderId
      parameters:
        - name: orderId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            $ref: '#/components/schemas/GWOrderId'
        - name: accept-language
          in: header
          description: set the response language, default is en-US - defines the language following the BCP 47 standard https://tools.ietf.org/html/bcp47
          required: false
          style: simple
          explode: false
          schema:
            $ref: '#/components/schemas/Language'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogisticsOrder'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
      security:
        - default:
            - API_CUSAPI_LOGISTICS_ORDER_READ
      x-scope: API_LOGISTICS_ORDER_READ
      x-auth-type: Application & Application User
      x-throttling-tier: 1KPerMin
components:
  schemas:
    Country:
      type: string
      description: defines the country following IS-3166-1 Alpha2, see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2
      format: iso-3166
      example: AT
    DateTime:
      maxLength: 29
      type: string
      description: date / time in format yyyy-mm-ddThh:mm:ss.mmmÂ±hh:mm following the RFC 3339 standard, see https://tools.ietf.org/html/rfc3339
      format: date-time
    GWCustomerId:
      maximum: 9999999
      minimum: 100000
      type: integer
      description: customer account number of GW
      format: int32
      example: 123456
    CustomerOrder:
      type: string
      description: reference from the customer
      example: customer_order
    Incoterm:
      type: object
      properties:
        code:
          type: string
          description: code according to Incoterms 2020
          example: DPU
          enum:
            - EXW
            - FCA
            - CPT
            - CIP
            - DAP
            - DPU
            - DDP
            - FAS
            - FOB
            - CFR
            - CIF
        location:
          type: string
          description: place for the incoterm
          example: Wien
      description: Incoterm code and location
    MyGWStatusCode:
      type: string
      description: status as in myGW shown
      example: OPEN
      enum:
        - OPEN
        - IN_PROGRESS
        - ATTENTION
        - CRITICAL
        - COMPLETED
    GeoLocation:
      type: object
      properties:
        latitude:
          type: number
          description: latitude of the event location if available
          example: 47.4671709
        longitude:
          type: number
          description: longitude of the event location if available
          example: 9.6720238
      description: geographical location in longitude and latitude
    Location:
      type: object
      properties:
        locationInformation:
          type: string
          description: location information
          example: Lauterach
        countryCode:
          $ref: '#/components/schemas/Country'
        geoLocation:
          $ref: '#/components/schemas/GeoLocation'
      description: location e.g. of a status event
    Address:
      type: object
      properties:
        name1:
          maxLength: 35
          type: string
          description: name 1 of the address
          example: name 1
        name2:
          maxLength: 35
          type: string
          description: name 2 of the address
          example: name 2
        name3:
          maxLength: 35
          type: string
          description: name 3 of the address
          example: name 3
        name4:
          maxLength: 35
          type: string
          description: name 4 of the address
          example: name 4
        street1:
          maxLength: 35
          type: string
          description: street 1 of the address
          example: street 1
        street2:
          maxLength: 35
          type: string
          description: street 2 of the address
          example: street 2
        street3:
          maxLength: 35
          type: string
          description: street 3 of the address
          example: street 3
        postbox:
          maxLength: 9
          type: string
          description: postbox of the address
          example: postbox
        city:
          maxLength: 35
          type: string
          description: city of the address
          example: Lauterach
        zipCode:
          maxLength: 9
          type: string
          description: zipcode of the address
          example: '6923'
        countryCode:
          $ref: '#/components/schemas/Country'
        state:
          type: string
          description: state or province or territory of the address
          example: Vorarlberg
        location:
          description: location information
          allOf:
            - $ref: '#/components/schemas/Location'
      description: address
    Date:
      type: string
      description: date in format yyyy-mm-dd
      format: date
    Translation:
      type: object
      properties:
        languageRequested:
          $ref: '#/components/schemas/Language'
        translationResolved:
          $ref: '#/components/schemas/LingualText'
        translationOriginal:
          $ref: '#/components/schemas/LingualText'
      description: the translation object returns a translated text. It shows the requested language, as well as the original text. If feasible the original text is translated to the requested language. If not feasible, the resolved text contains the English translation
    EtaInfo:
      type: object
      properties:
        estimatedTimeOfArrivalMin:
          $ref: '#/components/schemas/DateTime'
        estimatedTimeOfArrivalMax:
          $ref: '#/components/schemas/DateTime'
        etaSpecification:
          type: string
          description: how is the ETA calculated, what does it express
          example: ETA at recipient
          enum:
            - ATA at recipient
            - ETA at recipient
            - ATA at destination (air)port
            - ETA at destination (air)port
      description: describes a time window for the estimated time of arrival
    LingualText:
      type: object
      properties:
        text:
          type: string
          description: text
          example: lorem ipsum
        language:
          $ref: '#/components/schemas/Language'
      description: this object contains a text plus the language identifier, showing the language of the given text
    GWOrderId:
      maxLength: 10
      minLength: 10
      pattern: '[0-9A-Z]{10}'
      type: string
      description: the GW orderId is always a 10 digit number
      example: ABC4567890
    GWWarehouseId:
      maxLength: 12
      minLength: 10
      type: string
      example: 123456_ABC
    OrderReferenced:
      required:
        - creationDate
        - customerId
        - orderId
      type: object
      properties:
        customerId:
          $ref: '#/components/schemas/GWCustomerId'
        orderId:
          $ref: '#/components/schemas/GWOrderId'
        creationDate:
          $ref: '#/components/schemas/Date'
        references:
          uniqueItems: true
          type: array
          description: references of the order
          items:
            $ref: '#/components/schemas/Reference'
      description: shortest form of an order information, used to identify the referenced order in responses
    Reference:
      type: object
      properties:
        qualifier:
          type: string
          description: qualifier for the reference
          example: GENERAL
          enum:
            - GENERAL
            - DELIVERY_NOTE
            - EXTERNAL_ORDERTYPE
        reference:
          maxLength: 35
          type: string
          description: reference string
          example: '12345'
      description: general reference
    CustomizedInformation:
      type: object
      properties:
        qualifier:
          type: string
          description: qualifier for the customized information
          example: CUSTOMIZED_INFORMATION1
          enum:
            - CUSTOMIZED_INFORMATION1
            - CUSTOMIZED_INFORMATION2
            - CUSTOMIZED_INFORMATION3
            - CUSTOMIZED_INFORMATION4
            - CUSTOMIZED_INFORMATION5
            - CUSTOMIZED_INFORMATION6
            - CUSTOMIZED_INFORMATION7
            - CUSTOMIZED_INFORMATION8
            - CUSTOMIZED_INFORMATION9
            - CUSTOMIZED_INFORMATION10
            - CUSTOMIZED_INFORMATION11
            - CUSTOMIZED_INFORMATION12
            - CUSTOMIZED_INFORMATION13
            - CUSTOMIZED_INFORMATION14
            - CUSTOMIZED_INFORMATION15
            - CUSTOMIZED_INFORMATION16
            - CUSTOMIZED_INFORMATION17
            - CUSTOMIZED_INFORMATION18
            - CUSTOMIZED_INFORMATION19
            - CUSTOMIZED_INFORMATION20
        reference:
          type: string
          description: reference string
          example: customized information
      description: customized information
    ErrorMessage:
      type: object
      properties:
        text:
          $ref: '#/components/schemas/Translation'
        logInfo:
          type: object
          properties:
            code:
              type: string
              description: GW coded message
              example: '4711'
            x-apiId:
              type: string
              description: id to identify the API
              example: statusCustomerPartner
            x-correlation-Id:
              type: string
              description: GW log entry id
              example: 1234567-0
          description: structured information for GW support
      additionalProperties: false
      description: standard structure for response messages
    Language:
      maxLength: 5
      pattern: '[a-z][a-z]\-[A-Z][A-Z]'
      type: string
      description: defines the language following the BCP 47 standard https://tools.ietf.org/html/bcp47
      format: bcp47
      example: de-DE
    AddressReference:
      type: object
      properties:
        qualifier:
          type: string
          description: qualifier for the address reference
          example: GENERAL
          enum:
            - CUSTOMER_ID
            - GENERAL
        reference:
          maxLength: 35
          type: string
          description: reference ID for the address with the given qualification
          example: '12345'
      description: adds additional references to an address
    Contact:
      type: object
      properties:
        function:
          type: string
          description: function of the contact
          example: Purchasing Manager
        fax:
          type: string
          description: fax number of the contact
          example: +43/1/234-9
        surname:
          type: string
          description: surname of the contact
          example: Max
        name:
          type: string
          description: name of the contact
          example: Mustermann
        language:
          $ref: '#/components/schemas/Language'
        title:
          type: string
          description: title of the contact
          example: Dr.
        mobile:
          type: string
          description: mobile phone number of the contact
          example: +43/1/234
        phone:
          type: string
          description: phone number of the contact
          example: +43/1/234
        salutation:
          type: string
          description: salutation of the contact
          example: Mister
          enum:
            - Mister
            - Misses
            - Miss
            - ''
        email:
          type: string
          description: email of the contact
          format: email
          example: max@mustermann.info
      description: contact information
    GWEventCode:
      type: string
      description: gives a coded status for the order
      example: RDGW300
      enum:
        - RDGW100
        - RDGW165
        - RDGW610
        - RDGW166
        - RDGW180
        - RDGW290
        - RDGW300
        - RDGW400
        - RDGW450
        - RDGW810
        - RDGW820
        - RDGW830
        - RDGW850
        - RDGW860
        - AGW100
        - ASGWP05
        - AGWM09
        - ASGWP10
        - ASGWP20
        - ASGWP25
        - AGWM71
        - AGWI24
        - AGWM24
        - AGWM43
        - AGWM11
        - ASGWP40
        - AGWM31
        - AGWI10
        - AGWM10
        - AGWM44
        - AGWM73
        - ASGWP50
        - ASGWP53
        - ASGWP55
        - AGWM21
        - AGWM75
        - ASGWP60
        - AGWM77
        - AGWM13
        - AGWI21
        - AGWM14
        - SGW100
        - SGWOEE
        - SGWM09
        - ASGWP30
        - SGWM33
        - SGWM72
        - SGWOAE
        - SGWOVD
        - SGWM24
        - SGWM10
        - SGWM73
        - SGWO0A
        - SGWOVA
        - SGWM79
        - SGWOUV
        - SGWORD
        - SGWM21
        - SGWM75
        - SGWO0D
        - SGWM12
        - SGWM77
        - SGWM13
        - SGWM14
        - LGWIN
        - LGWIA
        - LGWIF
        - LGWON
        - LGWOA
        - LGWOF
        - '*LS2*090'
        - '*LS2*105'
        - '*LS2*110'
        - '*LS2*120'
    Measurement:
      type: object
      properties:
        measureQualifier:
          type: string
          description: type of the measure
          example: GROSS_WEIGHT
          enum:
            - NET_WEIGHT
            - GROSS_WEIGHT
            - TARE_WEIGHT
            - CHARGEABLE_WEIGHT
            - NET_VOLUME
            - GROSS_VOLUME
            - MINIMUM_TEMPERATURE
            - MAXIMUM_TEMPERATURE
            - CONTROL_TEMPERATURE
            - LOADING_UNITS
            - FLOOR_SPACE
            - TOTAL_DISTANCE
            - TOLL_DISTANCE
        measureUnit:
          type: string
          description: unit of the measure
          example: KGM
          enum:
            - FAH
            - FOT
            - FTK
            - FTQ
            - GLI
            - GRM
            - INH
            - KEL
            - KGM
            - KTM
            - LTR
            - MMT
            - MTK
            - MTQ
            - MTR
            - SMI
        measure:
          type: number
          description: value of the measure, e.g. the weight. Respect the number of decimals allowed. For weights 0 decimals. For distances 1 decimal. For floor spaces 2 decimals. For volumes 3 decimals. For temperature 1 decimal.
          format: float
          example: 123
      description: measure object to represent a measure like a weight
    GWEventReasonCode:
      type: string
      description: gives and additional reason code, not mandatory
      example: additional reason code
      enum:
        - '1'
        - '2'
        - '4'
        - '5'
        - '8'
        - '9'
        - '10'
        - '11'
        - '12'
        - '14'
        - '15'
        - '16'
        - '17'
        - '18'
        - '19'
        - '20'
        - '22'
        - '54'
        - '56'
        - '63'
        - '64'
        - '66'
        - '67'
        - '68'
        - '69'
        - '70'
        - '72'
        - '74'
        - '80'
        - '81'
        - '82'
        - '83'
        - '84'
        - '85'
        - '89'
        - '90'
        - '95'
        - '99'
        - '100'
        - '124'
        - '138'
        - '172'
        - '711'
        - '1111'
        - '3321'
        - '3333'
        - A12
        - BC1
        - BC2
        - CA2
        - CP1
        - CP2
        - CR1
        - CR11
        - CR2
        - DG6
        - E01
        - E02
        - E11
        - E21
        - E22
        - E23
        - E24
        - E25
        - E27
        - E29
        - E31
        - E32
        - E33
        - E34
        - E35
        - E37
        - E38
        - E39
        - E40
        - E4A5
        - E4AM
        - E4AO
        - E4BS
        - E51
        - E62
        - FM4
        - FM7
        - FM8
        - MH1
        - MH6
        - MOB
        - PC1
        - RA1
    GoodsItem:
      required:
        - description
        - measurements
        - packageType
        - position
        - quantity
      type: object
      properties:
        position:
          type: string
          description: position of goods
          example: P1
        quantity:
          maximum: 999999.999
          minimum: 0.001
          type: number
          description: defines the quantity of shipping units
          format: float
          example: 3.25
        packageType:
          $ref: '#/components/schemas/PackageType'
        description:
          maxLength: 200
          type: string
          description: description of goods
          example: goods example
        stackable:
          type: boolean
          description: indicates the stackabiltiy of the goods
          example: false
          default: false
        measurements:
          uniqueItems: true
          type: array
          description: goods measurements
          items:
            $ref: '#/components/schemas/Measurement'
        dimensions:
          $ref: '#/components/schemas/Dimension'
        references:
          uniqueItems: true
          type: array
          description: goods references
          items:
            $ref: '#/components/schemas/GoodsItemReference'
      description: goods information
    PackageType:
      type: string
      description: the package type is following the UN/ECE recommendation 21, using 2 character codes. See https://www.unece.org/fileadmin/DAM/cefact/recommendations/rec21/rec21rev4_ecetrd309.pdf
      example: UC
      enum:
        - UC
        - CV
        - PE
        - PX
        - BE
        - PB
        - PK
    Dimension:
      type: object
      properties:
        length:
          type: number
          description: goods length
          format: float
          example: 1.2
        width:
          type: number
          description: goods width
          format: float
          example: 0.8
        height:
          type: number
          description: goods height
          format: float
          example: 1.8
        dimensionUnit:
          type: string
          description: unit for the dimension
          example: MTR
          enum:
            - MTR
            - MMT
            - FOT
            - INH
      description: goods dimension
    Event:
      type: object
      properties:
        eventCode:
          $ref: '#/components/schemas/GWEventCode'
        eventDateTime:
          $ref: '#/components/schemas/DateTime'
        eventSignee:
          type: string
          description: Person (or system) which reported the event or signed it
          example: Michael Beck
        eventDescription:
          $ref: '#/components/schemas/Translation'
        myGwStatusCode:
          $ref: '#/components/schemas/MyGWStatusCode'
        location:
          $ref: '#/components/schemas/Location'
        eventReasonCode:
          $ref: '#/components/schemas/GWEventReasonCode'
        eventReason:
          $ref: '#/components/schemas/Translation'
        eventMetaCode:
          $ref: '#/components/schemas/GWEventMetaCode'
      description: status object, collecting all information of a status event
    GWEventMetaCode:
      type: string
      description: gives a meta status for the order
      example: UNLOADED
      enum:
        - RECEIVED
        - DELIVERY_PREVENTED
        - NOT_IN_DELIVERY
        - UNSUCCESSFUL_PREADVICE
        - ETA
        - UNLOADED
        - IN_TRANSIT
        - IN_DELIVERY
        - PICKED_UP
        - NO_PICKUP
        - DELIVERED
        - DAMAGED
        - SHORTAGE
        - NOT_DELIVERED
        - ACCEPTANCE_REFUSED
        - RETURN
        - INBOUND_STORAGE
        - MISSING
        - LOADED
        - EXPORT_CUSTOMS
        - HANDOVER_FROM_AGENT
        - HANDOVER_TO_AGENT
        - IMPORT_CUSTOMS
        - READY4PICKUP
        - ARRIVED_PORT
        - DELAYED
        - DEPARTED_PORT
        - SHIPPED
        - CONTAINER_DISPATCHED
        - CONTAINER_RETURN
        - REBOOKED
        - COMPLETED
        - IN_PLANNING
        - OUTBOUND_STORAGE
    EventCallback:
      type: object
      properties:
        eventMetaCode:
          $ref: '#/components/schemas/GWEventMetaCode'
      description: status object, collecting status and translation information
    OrderCurrentStatus:
      type: object
      properties:
        etaInfo:
          $ref: '#/components/schemas/EtaInfo'
        statusCurrent:
          $ref: '#/components/schemas/Event'
        orderReferenced:
          $ref: '#/components/schemas/OrderReferenced'
      additionalProperties: false
      description: contains a referenced order with the actual status and (if feasible) the estimated time of arrival
    CallbackUrl:
      type: string
      description: defines the URL for an asynchronous callback. Must include https (only secured transfer allowed)
      format: url
      example: https://ms-server.com/mycallbackurl
    LogisticsAddress:
      required:
        - addressType
      type: object
      properties:
        addressType:
          type: string
          description: qualifier for the purpose of the address
          example: CONSIGNEE
          enum:
            - ORDERBY
            - SUPPLIER
            - CONSIGNEE
            - CONTRACTEE
            - LSP
            - DELIVERY_ADDRESS
            - DEPOSITOR
            - GOODS_OWNER
            - BUYER
            - DISTRIBUTOR
        addressReferences:
          uniqueItems: true
          type: array
          description: references for this address
          items:
            $ref: '#/components/schemas/AddressReference'
        address:
          $ref: '#/components/schemas/Address'
        contact:
          $ref: '#/components/schemas/Contact'
      description: specific object to contain an address for a given purpose within a transport order
    Note:
      type: object
      properties:
        noteType:
          type: string
          description: classification of the note
          example: GENERAL
          enum:
            - GENERAL
            - DELIVERY_INSTRUCTION
            - PICKUP_INSTRUCTION
        noteText:
          $ref: '#/components/schemas/LingualText'
      description: object for text notes
    OrderLineReference:
      type: object
      properties:
        qualifier:
          type: string
          description: qualifier for the reference
          example: SERIALNUMBER
          enum:
            - BATCH
            - CROSSDOCKING_ID
            - RESERVATION_NUMBER
            - CUSTOMIZED_ATTRIBUTE1
            - VIRTUALITEM
            - SERIALNUMBER
            - SUPPLIER_ARTICLE_ID
            - CONSIGNEE_ARTICLE_ID
        reference:
          type: string
          example: abc123123
      description: reference for article
    OrderLineNote:
      type: object
      properties:
        noteText:
          $ref: '#/components/schemas/LingualText'
        noteType:
          type: string
          description: classification of the note
          example: DELIVERYNOTE
          enum:
            - DELIVERYNOTE
            - WAREHOUSE_INSTRUCTION
            - HOMEDELIVERY
      description: object for text notes
    OrderLine:
      required:
        - lineItemNumber
      type: object
      properties:
        articleId:
          type: string
          description: article identification number
          example: '3'
        lineItemNumber:
          maximum: 99999
          type: integer
          description: unique customer line item number
          example: 5
        references:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/OrderLineReference'
        customizedInformation:
          maxItems: 20
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CustomizedInformation'
        quantity:
          type: number
          description: quantity of article
          example: 2
        variant:
          type: string
          description: article variant
          example: test1
        notes:
          type: array
          items:
            $ref: '#/components/schemas/OrderLineNote'
      description: an identified but not specified packing item on a transport
    Currency:
      type: string
      description: currency following ISO-42-17, see https://en.wikipedia.org/wiki/ISO_4217
      format: iso-4217
      example: EUR
    Value:
      type: object
      properties:
        qualifier:
          type: string
          description: type of amount
          example: GOODS_VALUE
          enum:
            - GOODS_VALUE
            - INSURANCE_VALUE
            - CASH_ON_DELIVERY
        amount:
          type: number
          description: Amount expressed as a decimal number of major currency units
          format: decimal
          example: 99.95
        currency:
          $ref: '#/components/schemas/Currency'
    TransportProduct:
      type: object
      properties:
        product:
          type: string
          description: definition of the GW transport product
          example: GW_PRO_LINE
          enum:
            - GW_PRO_LINE
            - GW_DIRECT_LINE
            - AIRFREIGHT
            - FCL_SEAFREIGHT
            - LCL_SEAFREIGHT
            - GW_HOME_DELIVERY
            - DPD
            - EURO_EXPRESS
            - UPS
            - FEDEX
            - POST_AT
            - GLS
            - DHL_EXPRESS
            - SELF_PICKUP
            - RAIL
            - 3GTMS
            - ROAD
            - SF
        productServiceLevel:
          type: string
          description: definition of the GW service level of the product. Available service levels depend on the transport product plus the relation of the transport plus your contract with GW.
          example: STD
          enum:
            - STD
            - EXP
            - P9
            - P10
            - P12
            - P16
            - D9
            - D10
            - D12
            - D16
        productServiceLevelText:
          $ref: '#/components/schemas/Translation'
        additionalServices:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AdditionalServiceTransport'
      description: specification of the required GW transport product
    GoodsItemReference:
      type: object
      properties:
        qualifier:
          type: string
          description: qualifier for the reference
          example: GENERAL
          enum:
            - CUSTOMER_ORDER
            - GENERAL
            - PARCEL_ID
            - POSITION_NUMBER
            - CONSIGNEE_SHIPMENT_NUMBER
            - QUALITY_VALUATION_NUMBER
            - DELIVERY_NOTE
            - HANDLING_AND_MOVEMENT_REFERENCE(MRN)
            - PURCHASE_ORDER_NUMBER
            - RESERVATION_NUMBER
            - WAREHOUSE_RECEIPT_ID
            - CALL_OFF_ID
        reference:
          maxLength: 20
          type: string
          description: reference string
          example: '12345'
      description: reference for goods item
    LogisticsRequirements:
      type: object
      properties:
        incoterm:
          $ref: '#/components/schemas/Incoterm'
        notes:
          type: array
          items:
            $ref: '#/components/schemas/Note'
        transportProduct:
          $ref: '#/components/schemas/TransportProduct'
        logisticsProduct:
          $ref: '#/components/schemas/LogisticsProduct'
        despatchDateTimeMin:
          $ref: '#/components/schemas/DateTime'
        despatchDateTimeMax:
          $ref: '#/components/schemas/DateTime'
        completionDateTimeMin:
          $ref: '#/components/schemas/DateTime'
        completionDateTimeMax:
          $ref: '#/components/schemas/DateTime'
        deliveryDateTimeMin:
          $ref: '#/components/schemas/DateTime'
        deliveryDateTimeMax:
          $ref: '#/components/schemas/DateTime'
      description: information about the required transport
    AdditionalServiceLogistics:
      type: object
      properties:
        additionalServiceText:
          description: additional service expressed in text. Read-only!
          allOf:
            - $ref: '#/components/schemas/Translation'
        additionalServiceAttribute:
          type: string
          description: some additional service require additional information
          example: Phone number 012345
        additionalService:
          type: string
          description: additional service coded
          example: DUMMY
          enum:
            - DUMMY
      description: contains information of an additional service. The availability of an additional service depends on the GW product, in combination with the relation and your contract with GW.
    AdditionalServiceTransport:
      type: object
      properties:
        additionalService:
          type: string
          description: additional service coded
          example: COD
          enum:
            - ARRIVAL
            - AVISO
            - DGM
            - COD
            - CUSTOMS
        additionalServiceText:
          $ref: '#/components/schemas/Translation'
        additionalServiceAttribute:
          type: string
          description: some additional service require additional information
          example: Phone number 012345
      description: contains information of an additional service. The availability of an additional service depends on the GW product, in combination with the relation and your contract with GW.
    LogisticsProduct:
      type: object
      properties:
        product:
          type: string
          description: definition of the GW logistics product
          example: OUTBOUND_DELIVERY
          enum:
            - OUTBOUND_DELIVERY
        productServiceLevel:
          type: string
          description: definition of the GW service level of the product. Available service levels depend on the logistics product plus your contract with GW.
          example: STANDARD
          enum:
            - STANDARD
        cargoType:
          type: string
          description: can be defined per customer; for special transport-routing; or special pricing-calculation (sortage-criteria)
          example: cargotype
        productServiceLevelText:
          $ref: '#/components/schemas/Translation'
        additionalServices:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AdditionalServiceLogistics'
      description: specification of the required GW logistics product
    LogisticsOrder:
      required:
        - creationDateTime
        - customerOrder
        - logisticsAddresses
        - orderLines
      type: object
      properties:
        orderId:
          $ref: '#/components/schemas/GWOrderId'
        customerId:
          $ref: '#/components/schemas/GWCustomerId'
        customerOrder:
          $ref: '#/components/schemas/CustomerOrder'
        creationDateTime:
          $ref: '#/components/schemas/DateTime'
        warehouseId:
          $ref: '#/components/schemas/GWWarehouseId'
        references:
          uniqueItems: true
          type: array
          description: array of references for this order
          items:
            $ref: '#/components/schemas/Reference'
        customizedInformation:
          maxItems: 20
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CustomizedInformation'
        logisticsAddresses:
          minItems: 1
          uniqueItems: true
          type: array
          description: involved addresses for this logistics order
          items:
            $ref: '#/components/schemas/LogisticsAddress'
        logisticsRequirements:
          $ref: '#/components/schemas/LogisticsRequirements'
        orderLines:
          maxItems: 999
          minItems: 1
          uniqueItems: true
          type: array
          description: identified items to be handled
          items:
            $ref: '#/components/schemas/OrderLine'
        measurements:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Measurement'
        dimension:
          $ref: '#/components/schemas/Dimension'
        values:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Value'
        goodsItem:
          maxItems: 999
          uniqueItems: true
          type: array
          description: packed goods item to be transported
          items:
            $ref: '#/components/schemas/GoodsItem'
      additionalProperties: false
      description: object for a logistics order
  securitySchemes:
    default:
      type: oauth2
      description: This API uses OAuth 2 with the implicit grant flow.
      flows:
        implicit:
          authorizationUrl: https://my.api.gw-world.com/authorize
          scopes:
            API_CUSAPI_LOGISTICS_ORDER_CREATE: This scope provides access to logistics order creation for customers and partners
            API_CUSAPI_LOGISTICS_ORDER_READ: This scope provides access to logistics order status for customers and partners
          x-scopes-bindings:
            API_CUSAPI_LOGISTICS_ORDER_CREATE: GW.INTERNAL/I_CUSAPI_LOGISTICS_ORDER_CREATE,EXTERNAL/I_CUSAPI_LOGISTICS_ORDER_CREATE,APPUSER/I_CUSAPI_LOGISTICS_ORDER_READ
            API_CUSAPI_LOGISTICS_ORDER_READ: GW.INTERNAL/I_CUSAPI_LOGISTICS_ORDER_READ,EXTERNAL/I_CUSAPI_LOGISTICS_ORDER_READ,APPUSER/I_CUSAPI_LOGISTICS_ORDER_READ
          x-scopes-mappings:
            API_CUSAPI_LOGISTICS_ORDER_CREATE:
              display-name: API_CUSAPI_LOGISTICS_ORDER_CREATE
            API_CUSAPI_LOGISTICS_ORDER_READ:
              display-name: API_CUSAPI_LOGISTICS_ORDER_READ
        clientCredentials:
          tokenUrl: /token
          scopes:
            API_CUSAPI_LOGISTICS_ORDER_CREATE: This scope provides access to logistics order creation for customers and partners
            API_CUSAPI_LOGISTICS_ORDER_READ: This scope provides access to logistics order status for customers and partners
          x-scopes-bindings:
            API_CUSAPI_LOGISTICS_ORDER_CREATE: GW.INTERNAL/I_CUSAPI_LOGISTICS_ORDER_CREATE,EXTERNAL/I_CUSAPI_LOGISTICS_ORDER_CREATE,APPUSER/I_CUSAPI_LOGISTICS_ORDER_READ
            API_CUSAPI_LOGISTICS_ORDER_READ: GW.INTERNAL/I_CUSAPI_LOGISTICS_ORDER_READ,EXTERNAL/I_CUSAPI_LOGISTICS_ORDER_READ,APPUSER/I_CUSAPI_LOGISTICS_ORDER_READ
          x-scopes-mappings:
            API_CUSAPI_LOGISTICS_ORDER_CREATE:
              display-name: API_CUSAPI_LOGISTICS_ORDER_CREATE
            API_CUSAPI_LOGISTICS_ORDER_READ:
              display-name: API_CUSAPI_LOGISTICS_ORDER_READ
