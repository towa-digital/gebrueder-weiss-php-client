<?php
/**
 * OrderLine
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  Towa\GebruederWeissSDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Logistics Order
 *
 * API to create and retrieve logistics orders
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Towa\GebruederWeissSDK\Model;

use \ArrayAccess;
use \Towa\GebruederWeissSDK\ObjectSerializer;

/**
 * OrderLine Class Doc Comment
 *
 * @category Class
 * @description an identified but not specified packing item on a transport
 * @package  Towa\GebruederWeissSDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class OrderLine implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'OrderLine';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'article_id' => 'string',
        'line_item_number' => 'int',
        'references' => '\Towa\GebruederWeissSDK\Model\OrderLineReference[]',
        'customized_information' => '\Towa\GebruederWeissSDK\Model\CustomizedInformation[]',
        'quantity' => 'float',
        'variant' => 'string',
        'notes' => '\Towa\GebruederWeissSDK\Model\OrderLineNote[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'article_id' => null,
        'line_item_number' => null,
        'references' => null,
        'customized_information' => null,
        'quantity' => null,
        'variant' => null,
        'notes' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'article_id' => 'articleId',
        'line_item_number' => 'lineItemNumber',
        'references' => 'references',
        'customized_information' => 'customizedInformation',
        'quantity' => 'quantity',
        'variant' => 'variant',
        'notes' => 'notes'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'article_id' => 'setArticleId',
        'line_item_number' => 'setLineItemNumber',
        'references' => 'setReferences',
        'customized_information' => 'setCustomizedInformation',
        'quantity' => 'setQuantity',
        'variant' => 'setVariant',
        'notes' => 'setNotes'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'article_id' => 'getArticleId',
        'line_item_number' => 'getLineItemNumber',
        'references' => 'getReferences',
        'customized_information' => 'getCustomizedInformation',
        'quantity' => 'getQuantity',
        'variant' => 'getVariant',
        'notes' => 'getNotes'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['article_id'] = $data['article_id'] ?? null;
        $this->container['line_item_number'] = $data['line_item_number'] ?? null;
        $this->container['references'] = $data['references'] ?? null;
        $this->container['customized_information'] = $data['customized_information'] ?? null;
        $this->container['quantity'] = $data['quantity'] ?? null;
        $this->container['variant'] = $data['variant'] ?? null;
        $this->container['notes'] = $data['notes'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['line_item_number'] === null) {
            $invalidProperties[] = "'line_item_number' can't be null";
        }
        if (($this->container['line_item_number'] > 99999)) {
            $invalidProperties[] = "invalid value for 'line_item_number', must be smaller than or equal to 99999.";
        }

        if (!is_null($this->container['customized_information']) && (count($this->container['customized_information']) > 20)) {
            $invalidProperties[] = "invalid value for 'customized_information', number of items must be less than or equal to 20.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets article_id
     *
     * @return string|null
     */
    public function getArticleId()
    {
        return $this->container['article_id'];
    }

    /**
     * Sets article_id
     *
     * @param string|null $article_id article identification number
     *
     * @return self
     */
    public function setArticleId($article_id)
    {
        $this->container['article_id'] = $article_id;

        return $this;
    }

    /**
     * Gets line_item_number
     *
     * @return int
     */
    public function getLineItemNumber()
    {
        return $this->container['line_item_number'];
    }

    /**
     * Sets line_item_number
     *
     * @param int $line_item_number unique customer line item number
     *
     * @return self
     */
    public function setLineItemNumber($line_item_number)
    {

        if (($line_item_number > 99999)) {
            throw new \InvalidArgumentException('invalid value for $line_item_number when calling OrderLine., must be smaller than or equal to 99999.');
        }

        $this->container['line_item_number'] = $line_item_number;

        return $this;
    }

    /**
     * Gets references
     *
     * @return \Towa\GebruederWeissSDK\Model\OrderLineReference[]|null
     */
    public function getReferences()
    {
        return $this->container['references'];
    }

    /**
     * Sets references
     *
     * @param \Towa\GebruederWeissSDK\Model\OrderLineReference[]|null $references references
     *
     * @return self
     */
    public function setReferences($references)
    {


        $this->container['references'] = $references;

        return $this;
    }

    /**
     * Gets customized_information
     *
     * @return \Towa\GebruederWeissSDK\Model\CustomizedInformation[]|null
     */
    public function getCustomizedInformation()
    {
        return $this->container['customized_information'];
    }

    /**
     * Sets customized_information
     *
     * @param \Towa\GebruederWeissSDK\Model\CustomizedInformation[]|null $customized_information customized_information
     *
     * @return self
     */
    public function setCustomizedInformation($customized_information)
    {

        if (!is_null($customized_information) && (count($customized_information) > 20)) {
            throw new \InvalidArgumentException('invalid value for $customized_information when calling OrderLine., number of items must be less than or equal to 20.');
        }
        $this->container['customized_information'] = $customized_information;

        return $this;
    }

    /**
     * Gets quantity
     *
     * @return float|null
     */
    public function getQuantity()
    {
        return $this->container['quantity'];
    }

    /**
     * Sets quantity
     *
     * @param float|null $quantity quantity of article
     *
     * @return self
     */
    public function setQuantity($quantity)
    {
        $this->container['quantity'] = $quantity;

        return $this;
    }

    /**
     * Gets variant
     *
     * @return string|null
     */
    public function getVariant()
    {
        return $this->container['variant'];
    }

    /**
     * Sets variant
     *
     * @param string|null $variant article variant
     *
     * @return self
     */
    public function setVariant($variant)
    {
        $this->container['variant'] = $variant;

        return $this;
    }

    /**
     * Gets notes
     *
     * @return \Towa\GebruederWeissSDK\Model\OrderLineNote[]|null
     */
    public function getNotes()
    {
        return $this->container['notes'];
    }

    /**
     * Sets notes
     *
     * @param \Towa\GebruederWeissSDK\Model\OrderLineNote[]|null $notes notes
     *
     * @return self
     */
    public function setNotes($notes)
    {
        $this->container['notes'] = $notes;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


