<?php
/**
 * Article
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  Towa\GebruederWeissSDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Logistics Order
 *
 * API to create and retrieve logistics orders
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: michael.beck@gw-world.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.2.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Towa\GebruederWeissSDK\Model;

use \ArrayAccess;
use \Towa\GebruederWeissSDK\ObjectSerializer;

/**
 * Article Class Doc Comment
 *
 * @category Class
 * @description Article
 * @package  Towa\GebruederWeissSDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class Article implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Article';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'line_item_number' => 'float',
        'article_id' => 'float',
        'variant' => 'string',
        'gtin' => 'string',
        'quantity' => 'float',
        'article_description' => '\Towa\GebruederWeissSDK\Model\LingualText',
        'external' => '\Towa\GebruederWeissSDK\Model\External',
        'measurement' => '\Towa\GebruederWeissSDK\Model\Measurement',
        'reference' => '\Towa\GebruederWeissSDK\Model\ArticleReference',
        'logisticsrequirement' => '\Towa\GebruederWeissSDK\Model\LogisticsRequirementsOrderLine'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'line_item_number' => null,
        'article_id' => null,
        'variant' => null,
        'gtin' => null,
        'quantity' => null,
        'article_description' => null,
        'external' => null,
        'measurement' => null,
        'reference' => null,
        'logisticsrequirement' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'line_item_number' => 'lineItemNumber',
        'article_id' => 'articleId',
        'variant' => 'variant',
        'gtin' => 'gtin',
        'quantity' => 'quantity',
        'article_description' => 'articleDescription',
        'external' => 'external',
        'measurement' => 'measurement',
        'reference' => 'reference',
        'logisticsrequirement' => 'logisticsrequirement'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'line_item_number' => 'setLineItemNumber',
        'article_id' => 'setArticleId',
        'variant' => 'setVariant',
        'gtin' => 'setGtin',
        'quantity' => 'setQuantity',
        'article_description' => 'setArticleDescription',
        'external' => 'setExternal',
        'measurement' => 'setMeasurement',
        'reference' => 'setReference',
        'logisticsrequirement' => 'setLogisticsrequirement'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'line_item_number' => 'getLineItemNumber',
        'article_id' => 'getArticleId',
        'variant' => 'getVariant',
        'gtin' => 'getGtin',
        'quantity' => 'getQuantity',
        'article_description' => 'getArticleDescription',
        'external' => 'getExternal',
        'measurement' => 'getMeasurement',
        'reference' => 'getReference',
        'logisticsrequirement' => 'getLogisticsrequirement'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['line_item_number'] = $data['line_item_number'] ?? null;
        $this->container['article_id'] = $data['article_id'] ?? null;
        $this->container['variant'] = $data['variant'] ?? null;
        $this->container['gtin'] = $data['gtin'] ?? null;
        $this->container['quantity'] = $data['quantity'] ?? null;
        $this->container['article_description'] = $data['article_description'] ?? null;
        $this->container['external'] = $data['external'] ?? null;
        $this->container['measurement'] = $data['measurement'] ?? null;
        $this->container['reference'] = $data['reference'] ?? null;
        $this->container['logisticsrequirement'] = $data['logisticsrequirement'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets line_item_number
     *
     * @return float|null
     */
    public function getLineItemNumber()
    {
        return $this->container['line_item_number'];
    }

    /**
     * Sets line_item_number
     *
     * @param float|null $line_item_number unique customer line item number
     *
     * @return self
     */
    public function setLineItemNumber($line_item_number)
    {
        $this->container['line_item_number'] = $line_item_number;

        return $this;
    }

    /**
     * Gets article_id
     *
     * @return float|null
     */
    public function getArticleId()
    {
        return $this->container['article_id'];
    }

    /**
     * Sets article_id
     *
     * @param float|null $article_id article identification number
     *
     * @return self
     */
    public function setArticleId($article_id)
    {
        $this->container['article_id'] = $article_id;

        return $this;
    }

    /**
     * Gets variant
     *
     * @return string|null
     */
    public function getVariant()
    {
        return $this->container['variant'];
    }

    /**
     * Sets variant
     *
     * @param string|null $variant article variant
     *
     * @return self
     */
    public function setVariant($variant)
    {
        $this->container['variant'] = $variant;

        return $this;
    }

    /**
     * Gets gtin
     *
     * @return string|null
     */
    public function getGtin()
    {
        return $this->container['gtin'];
    }

    /**
     * Sets gtin
     *
     * @param string|null $gtin GTIN-Number (EAN)
     *
     * @return self
     */
    public function setGtin($gtin)
    {
        $this->container['gtin'] = $gtin;

        return $this;
    }

    /**
     * Gets quantity
     *
     * @return float|null
     */
    public function getQuantity()
    {
        return $this->container['quantity'];
    }

    /**
     * Sets quantity
     *
     * @param float|null $quantity quantity of article
     *
     * @return self
     */
    public function setQuantity($quantity)
    {
        $this->container['quantity'] = $quantity;

        return $this;
    }

    /**
     * Gets article_description
     *
     * @return \Towa\GebruederWeissSDK\Model\LingualText|null
     */
    public function getArticleDescription()
    {
        return $this->container['article_description'];
    }

    /**
     * Sets article_description
     *
     * @param \Towa\GebruederWeissSDK\Model\LingualText|null $article_description article_description
     *
     * @return self
     */
    public function setArticleDescription($article_description)
    {
        $this->container['article_description'] = $article_description;

        return $this;
    }

    /**
     * Gets external
     *
     * @return \Towa\GebruederWeissSDK\Model\External|null
     */
    public function getExternal()
    {
        return $this->container['external'];
    }

    /**
     * Sets external
     *
     * @param \Towa\GebruederWeissSDK\Model\External|null $external external
     *
     * @return self
     */
    public function setExternal($external)
    {
        $this->container['external'] = $external;

        return $this;
    }

    /**
     * Gets measurement
     *
     * @return \Towa\GebruederWeissSDK\Model\Measurement|null
     */
    public function getMeasurement()
    {
        return $this->container['measurement'];
    }

    /**
     * Sets measurement
     *
     * @param \Towa\GebruederWeissSDK\Model\Measurement|null $measurement measurement
     *
     * @return self
     */
    public function setMeasurement($measurement)
    {
        $this->container['measurement'] = $measurement;

        return $this;
    }

    /**
     * Gets reference
     *
     * @return \Towa\GebruederWeissSDK\Model\ArticleReference|null
     */
    public function getReference()
    {
        return $this->container['reference'];
    }

    /**
     * Sets reference
     *
     * @param \Towa\GebruederWeissSDK\Model\ArticleReference|null $reference reference
     *
     * @return self
     */
    public function setReference($reference)
    {
        $this->container['reference'] = $reference;

        return $this;
    }

    /**
     * Gets logisticsrequirement
     *
     * @return \Towa\GebruederWeissSDK\Model\LogisticsRequirementsOrderLine|null
     */
    public function getLogisticsrequirement()
    {
        return $this->container['logisticsrequirement'];
    }

    /**
     * Sets logisticsrequirement
     *
     * @param \Towa\GebruederWeissSDK\Model\LogisticsRequirementsOrderLine|null $logisticsrequirement logisticsrequirement
     *
     * @return self
     */
    public function setLogisticsrequirement($logisticsrequirement)
    {
        $this->container['logisticsrequirement'] = $logisticsrequirement;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


