---
openapi: 3.0.0
info:
  title: Logistics Order
  description: API to create and retrieve logistics orders
  contact:
    name: API-Gilde
    email: michael.beck@gw-world.com
  version: 1.0.0
servers:
- url: /
security:
- oAuth:
  - API_LOGISTICS_ORDER_ORDER_STATUS_READ
  - API_LOGISTICS_ORDER_ORDER_CREATE
  - API_LOGISTICS_ORDER_ORDER_READ
paths:
  /logistics-order:
    post:
      tags:
      - write
      summary: create a logistics order
      requestBody:
        description: logistics order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogisticsOrder'
        required: true
      responses:
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GWOrderId'
        "400":
          description: Faulty parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - oAuth:
        - API_LOGISTICS_ORDER_ORDER_CREATE
  /logistics-order/{orderId}/current-status:
    get:
      tags:
      - read
      summary: by identifying your logistics-order using the orderId in the path, you get the current status of the logistics-order
      operationId: getStatusByOrderId
      parameters:
      - name: orderId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: calculateETA
        in: query
        description: includes the calculation of an ETA if it is a logistics order
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: accept-language
        in: header
        description: set the response language, default is en - defines the language following the BCP 47 standard https://tools.ietf.org/html/bcp47
        required: false
        style: simple
        explode: false
        schema:
          type: string
          format: bcp47
          default: en-EN
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCurrentStatus'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
      security:
      - oAuth:
        - API_LOGISTICS_ORDER_ORDER_STATUS_READ
      x-scope: API_LOGISTICS_ORDER_STATUS_READ
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  /logistics-order/{orderId}/:
    get:
      tags:
      - read
      summary: by identifying your logistics-order using the orderId in the path, you get the data of the logistics-order
      operationId: getLogisticsOrderByOrderId
      parameters:
      - name: orderId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accept-language
        in: header
        description: set the response language, default is en - defines the language following the BCP 47 standard https://tools.ietf.org/html/bcp47
        required: false
        style: simple
        explode: false
        schema:
          type: string
          format: bcp47
          default: en-EN
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogisticsOrder'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "401":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Not Found
      security:
      - oAuth:
        - API_LOGISTICS_ORDER_ORDER_READ
      x-scope: API_LOGISTICS_ORDER_STATUS_READ
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
components:
  schemas:
    LogisticsOrder:
      type: object
      properties:
        url:
          $ref: '#/components/schemas/Url'
        warehouseLocation:
          $ref: '#/components/schemas/WarehouseLocation'
        orderId:
          $ref: '#/components/schemas/GWOrderId'
        creationDateTime:
          $ref: '#/components/schemas/DateTime'
        ownerId:
          $ref: '#/components/schemas/GWCustomerId'
        references:
          type: array
          description: array of references for this order
          items:
            $ref: '#/components/schemas/OrderReference'
        logisticsAddresses:
          type: array
          description: involved addresses for this transport
          items:
            $ref: '#/components/schemas/LogisticsAddress'
        logisticsRequirements:
          description: object containing all requirments for the logistic planning and execution
          allOf:
          - $ref: '#/components/schemas/LogisticsRequirements'
        incoterm:
          $ref: '#/components/schemas/Incoterm'
        amounts:
          type: array
          items:
            $ref: '#/components/schemas/Amount'
        measurements:
          type: array
          items:
            $ref: '#/components/schemas/Measurement'
        orderLines:
          type: array
          description: identified items to be transported
          items:
            $ref: '#/components/schemas/OrderLine'
        goodsItem:
          $ref: '#/components/schemas/GoodsItem'
      description: object for a logistics order
    LogisticsAddress:
      type: object
      properties:
        addressType:
          type: string
          description: qualifier for the purpose of the address
          example: supplier
          enum:
          - orderby
          - supplier
          - consignee
          - contractee
          - logisticsserviceprovider
          - delivery
          - depositor
          - goodsowner
          - buyer
          - distributor
        addressReferences:
          type: array
          description: references for this address
          items:
            $ref: '#/components/schemas/AddressReference'
        address:
          description: address for this purpose
          allOf:
          - $ref: '#/components/schemas/Address'
        contact:
          description: contact for this address
          allOf:
          - $ref: '#/components/schemas/Contact'
      description: specific object to contain an address for a given purpose within a transport order
    LogisticsProduct:
      type: object
      properties:
        product:
          type: string
          description: definition of the GW transport product
          example: GW
          enum:
          - GW
          - HD
          - DPD
          - PICKUP
          - AIR
          - SEA
          - FTL
          - EEX
          - EVD
        productServiceLevel:
          type: string
          description: definition of the GW service level of the product. Available service levels depend on the transport product plus the relation of the transport plus your contract with GW.
          example: HD
          enum:
          - "327"
        cargoType:
          type: string
          description: can be defined per customer; for special transport-routing; or special pricing-calculation (sortage-criteria)
          example: cargotype
        productServiceLevelText:
          $ref: '#/components/schemas/Translation'
        additionalServices:
          type: array
          items:
            $ref: '#/components/schemas/AdditionalService'
      description: specification of the required GW transport product
    LogisticsRequirements:
      type: object
      properties:
        orderType:
          $ref: '#/components/schemas/OrderType'
        logisticsProduct:
          $ref: '#/components/schemas/LogisticsProduct'
        dateTimes:
          type: array
          items:
            $ref: '#/components/schemas/LogisticsRequirementDateTime'
        notes:
          type: array
          items:
            $ref: '#/components/schemas/LogisticsRequirementNote'
      description: information about the required transport
    LogisticsRequirementsOrderLine:
      type: object
      properties:
        dateTimes:
          type: array
          items:
            $ref: '#/components/schemas/ArticleDateTime'
        notes:
          type: array
          items:
            $ref: '#/components/schemas/ArticleNote'
      description: information about the required transport
    EtaInfo:
      type: object
      properties:
        etaSpecification:
          type: string
          description: how is the ETA calculated, what does it express
          example: ETA at recipient
          enum:
          - ATA at recipient
          - ETA at recipient
          - ATA at destination (air)port
          - ETA at destination (air)port
        estimatedTimeOfArrivalMin:
          $ref: '#/components/schemas/DateTime'
        estimatedTimeOfArrivalMax:
          $ref: '#/components/schemas/DateTime'
      description: describes a time window for the estimated time of arrival
    Event:
      type: object
      properties:
        eventCode:
          $ref: '#/components/schemas/GWEventCode'
        eventDescription:
          $ref: '#/components/schemas/Translation'
        eventReasonCode:
          $ref: '#/components/schemas/GWEventReasonCode'
        eventReason:
          $ref: '#/components/schemas/Translation'
        myGwStatusCode:
          $ref: '#/components/schemas/MyGWStatusCode'
        location:
          $ref: '#/components/schemas/Location'
        eventDateTime:
          $ref: '#/components/schemas/DateTime'
        eventSignee:
          type: string
          description: Person (or system) which reported the event or signed it
          example: Michael Beck
      description: status object, collecting all information of a status event
    OrderCurrentStatus:
      type: object
      properties:
        orderReferenced:
          $ref: '#/components/schemas/OrderReferenced'
        statusCurrent:
          $ref: '#/components/schemas/Event'
        etaInfo:
          $ref: '#/components/schemas/EtaInfo'
      description: contains a referenced order with the actual status and (if feasible) the estimated time of arrival
    OrderLine:
      type: object
      properties:
        articles:
          type: array
          description: Article
          items:
            $ref: '#/components/schemas/Article'
      description: an identified but not specified packing item on a transport
    Country:
      type: string
      description: defines the country folowing IS-3166-1 Alpha2, see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2
      format: iso-3166
      example: AT
    Date:
      type: string
      description: date in format yyyy-mm-dd
      format: date
      example: 2020-03-10
    DateTime:
      type: string
      description: date / time in format yyyy-mm-ddThh:mm:ss.mmm±hh:mm following the RFC 3339 standard, see https://tools.ietf.org/html/rfc3339
      format: date-time
      example: 2017-07-21T17:32:28+02:00
    GWCustomerId:
      maximum: 9999999
      minimum: 100000
      type: integer
      description: customer account numnber of GW
      format: int32
      example: 123456
    GWOrderId:
      maxLength: 10
      minLength: 10
      type: string
      description: the GW orderId is always a 10 digit number
      example: "1234567890"
    WarehouseLocation:
      maxLength: 3
      minLength: 3
      type: string
      description: location of the Warehouse
      example: LAU
    Url:
      maximum: 1
      minimum: 1
      type: string
      description: URL for status response
      example: https://www.abc.com
    Language:
      type: string
      description: defines the language following the BCP 47 standard https://tools.ietf.org/html/bcp47
      format: bcp47
      example: de-DE
    GWEventCode:
      type: string
      description: gives a coded status for the order
      example: RDGW300
      enum:
      - RDGW100
      - RDGW165
      - RDGW610
      - RDGW166
      - RDGW180
      - RDGW290
      - RDGW300
      - RDGW400
      - RDGW450
      - RDGW810
      - RDGW820
      - RDGW830
      - RDGW850
      - RDGW860
      - AGW100
      - ASGWP05
      - AGWM09
      - ASGWP10
      - ASGWP20
      - ASGWP25
      - AGWM71
      - AGWI24
      - AGWM24
      - AGWM43
      - AGWM11
      - ASGWP40
      - AGWM31
      - AGWI10
      - AGWM10
      - AGWM44
      - AGWM73
      - ASGWP50
      - ASGWP53
      - ASGWP55
      - AGWM21
      - AGWM75
      - ASGWP60
      - AGWM77
      - AGWM13
      - AGWI21
      - AGWM14
      - SGW100
      - SGWOEE
      - SGWM09
      - ASGWP30
      - SGWM33
      - SGWM72
      - SGWOAE
      - SGWOVD
      - SGWM24
      - SGWM10
      - SGWM73
      - SGWO0A
      - SGWOVA
      - SGWM79
      - SGWOUV
      - SGWORD
      - SGWM21
      - SGWM75
      - SGWO0D
      - SGWM12
      - SGWM77
      - SGWM13
      - SGWM14
      - LGWIN
      - LGWIA
      - LGWIF
      - LGWON
      - LGWOA
      - LGWOF
    GWEventReasonCode:
      type: string
      description: gives and additional reason code, not mandatory
      example: "44"
      enum:
      - "1"
      - "2"
      - "4"
      - "5"
      - "8"
      - "9"
      - "10"
      - "11"
      - "12"
      - "14"
      - "15"
      - "16"
      - "17"
      - "18"
      - "19"
      - "20"
      - "22"
      - "54"
      - "56"
      - "63"
      - "64"
      - "66"
      - "67"
      - "68"
      - "69"
      - "70"
      - "72"
      - "74"
      - "80"
      - "81"
      - "82"
      - "83"
      - "84"
      - "85"
      - "89"
      - "90"
      - "95"
      - "99"
      - "100"
      - "124"
      - "138"
      - "172"
      - "711"
      - "1111"
      - "3321"
      - "3333"
      - A12
      - BC1
      - BC2
      - CA2
      - CP1
      - CP2
      - CR1
      - CR11
      - CR2
      - DG6
      - E01
      - E02
      - E11
      - E21
      - E22
      - E23
      - E24
      - E25
      - E27
      - E29
      - E31
      - E32
      - E33
      - E34
      - E35
      - E37
      - E38
      - E39
      - E40
      - E4A5
      - E4AM
      - E4AO
      - E4BS
      - E51
      - E62
      - FM4
      - FM7
      - FM8
      - MH1
      - MH6
      - MOB
      - PC1
      - RA1
    OrderType:
      type: string
      example: outbounddelivery
      enum:
      - inbounddelivery
      - inboundeliveryconfirmation
      - outbounddelivery
      - outbounddeliveryconfirmation
      - inboundorder
      - inboundorderconfirmation
      - outboundorder
      - outboundorderconfirmation
    MyGWStatusCode:
      type: string
      description: status as in myGW shown
      example: Open
      enum:
      - Open
      - InProgress
      - Attention
      - Critical
      - Completed
    AdditionalService:
      type: object
      properties:
        additionalService:
          type: string
          description: additional service coded
          example: "805"
          enum:
          - "805"
          - "807"
          - "800"
          - "833"
          - "834"
          - F53
          - PVZ
        additionalServiceText:
          description: additional service expressed in text. Read-only!
          allOf:
          - $ref: '#/components/schemas/Translation'
        additionalServiceAttribute:
          type: string
          description: some additional service require additional information
          example: Phone number 012345
      description: contains information of an additional service. The availability of an additional service depends on the GW product, in combination with the relation and your contract with GW.
    Address:
      type: object
      properties:
        name1:
          type: string
          description: name 1 of the address
          example: name 1
        name2:
          type: string
          description: name 2 of the address
          example: name 2
        name3:
          type: string
          description: name 3 of the address
          example: name 3
        name4:
          type: string
          description: name 4 of the address
          example: name 4
        street1:
          type: string
          description: street 1 of the address
          example: street 1
        street2:
          type: string
          description: street 2 of the address
          example: street 2
        street3:
          type: string
          description: street 3 of the address
          example: street 3
        postbox:
          type: string
          description: postbox of the address
          example: postbox
        city:
          type: string
          description: city of the address
          example: Lauterach
        zipCode:
          type: string
          description: zipcode of the address
          example: "6923"
        countryCode:
          $ref: '#/components/schemas/Country'
        state:
          type: string
          description: state or province or territory of the address
          example: Vorarlberg
        location:
          description: location information
          allOf:
          - $ref: '#/components/schemas/Location'
      description: address
    AddressReference:
      type: object
      properties:
        qualifier:
          type: string
          description: qualifier for the address reference
          example: general
          enum:
          - orderby
          - consignee
          - principal
          - supplier
          - carrier
          - delivery
          - depositor
          - goodsowner
          - buyer
          - distributor
          - gwcustomerid
          - customerreference
        reference:
          type: string
          description: reference ID for the address with the given qualification
          example: "12345"
      description: adds additional references to an address
    Contact:
      type: object
      properties:
        name:
          type: string
          description: name of the contact
          example: Mustermann
        surname:
          type: string
          description: surname of the contact
          example: Max
        salutation:
          type: string
          description: salutation of the contact
          example: Mister
          enum:
          - Mister
          - Misses
          - Miss
          - ""
        title:
          type: string
          description: title of the contact
          example: Dr.
        function:
          type: string
          description: function of the contact
          example: Purchasing Manager
        email:
          type: string
          description: email of the contact
          format: email
          example: max@mustermann.info
        phone:
          type: string
          description: phone number of the contact
          example: +43/1/234
        mobile:
          type: string
          description: mobile phone number of the contact
          example: +43/1/234
        fax:
          type: string
          description: fax number of the contact
          example: +43/1/234-9
        language:
          $ref: '#/components/schemas/Language'
      description: contact information
    ErrorMessage:
      type: object
      properties:
        text:
          $ref: '#/components/schemas/Translation'
        logInfo:
          $ref: '#/components/schemas/ErrorMessage_logInfo'
      description: standard structure for response messages
    GeoLocation:
      type: object
      properties:
        latitude:
          type: number
          description: latitude of the event location if available
          example: 47.4671709
        longitude:
          type: number
          description: longitude of the event location if available
          example: 9.6720238
      description: geographical location in longitude and latitude
    LingualText:
      type: object
      properties:
        language:
          $ref: '#/components/schemas/Language'
        text:
          type: string
          description: text
          example: lorem ipsum
      description: this object contains a text plus the language identifier, showing the language of the given text
    Location:
      type: object
      properties:
        countryCode:
          $ref: '#/components/schemas/Country'
        locationInformation:
          type: string
          description: location information
          example: Lauterach
        geoLocation:
          $ref: '#/components/schemas/GeoLocation'
      description: location e.g. of a status event
    OrderReferenced:
      type: object
      properties:
        customerId:
          $ref: '#/components/schemas/GWCustomerId'
        orderId:
          $ref: '#/components/schemas/GWOrderId'
        creationDate:
          $ref: '#/components/schemas/Date'
        references:
          type: array
          description: references of the order
          items:
            $ref: '#/components/schemas/Reference'
      description: shortest form of an order information, used to identify the referenced order in responses
    OrderReference:
      type: object
      properties:
        qualifier:
          type: string
          description: qualifier for the reference
          example: customerreference
          enum:
          - customerorderid
          - customerreference
          - ordertype
          - gworderid
          - warehouselocation
          - deliverynote
        reference:
          maxLength: 20
          type: string
          description: reference string
          example: "12345"
      description: order reference
    Reference:
      type: object
      properties:
        qualifier:
          type: string
          description: qualifier for the reference
          example: customerreference
          enum:
          - customerorderid
          - customerreference
          - ordertype
          - gworderid
          - warehouselocation
          - deliverynote
        reference:
          maxLength: 20
          type: string
          description: reference string
          example: "12345"
      description: general reference
    ArticleReference:
      type: object
      properties:
        qualifier:
          type: string
          description: qualifier for the reference
          example: crossdockingnumber
          enum:
          - batchnumber
          - crossdockingnumber
          - reservationnumber
          - customizedattribute1
          - virtualitemnumber
          - serialnumber
      description: reference for article
    GoodsItemReference:
      type: object
      properties:
        qualifier:
          type: string
          description: qualifier for the goodsitem
          example: packitemid
          enum:
          - packitemid
          - carriertrackingnumber
          - carriertrackingurl
      description: reference for goodsItem
    LogisticsRequirementDateTime:
      type: object
      properties:
        qualifier:
          type: string
          description: qualifier for the date/time
          example: completion
          enum:
          - completion
          - despatch
          - inbounddelivery
          - outbounddelivery
        from:
          $ref: '#/components/schemas/DateTime'
        to:
          $ref: '#/components/schemas/DateTime'
      description: date/time of special events
    ArticleDateTime:
      type: object
      properties:
        qualifier:
          type: string
          description: qualifier for the date/time
          example: completion
          enum:
          - bestbefore
          - production
          - inbounddelivery
          - outbounddelivery
        from:
          $ref: '#/components/schemas/DateTime'
        to:
          $ref: '#/components/schemas/DateTime'
      description: date/time of special events
    LogisticsRequirementNote:
      type: object
      properties:
        noteType:
          type: string
          description: classification of the note
          example: homedelivery
          enum:
          - deliveryinstructions
          - deliverynoteorder
          - warehouseinstructions
          - homedelivery
        noteText:
          $ref: '#/components/schemas/LingualText'
      description: object for text notes
    ArticleNote:
      type: object
      properties:
        noteType:
          type: string
          description: classification of the note
          example: deliverynotearticle
          enum:
          - deliverynotearticle
          - inboundwarehouseinstruction
          - outboundwarehouseinstruction
          - homedelivery
        noteText:
          $ref: '#/components/schemas/LingualText'
      description: object for text notes
    Incoterm:
      type: object
      properties:
        code:
          type: string
          description: code accordring to Incoterms 2020
          example: DDU
          enum:
          - EXW
          - FCA
          - CPT
          - CIP
          - DAP
          - DPU
          - DDP
          - FAS
          - FOP
          - CFR
          - CIF
        location:
          type: string
          description: place for the incoterm
          example: Wien
      description: Incoterm code and location
    Amount:
      type: object
      properties:
        qualifier:
          type: string
          example: cashondelivery
        value:
          type: number
          format: float
          example: 100
        currency:
          type: string
          example: EUR
      description: Amount
    Measurement:
      type: object
      properties:
        measureQualifier:
          type: string
          description: qualifier of the measurement
          example: grossweight
          enum:
          - grossweight
          - netweight
          - volume
        measureUnit:
          type: string
          description: unit of the measure
          example: KGM
        measure:
          type: number
          description: measure
          format: float
          example: 900
      description: Measurement
    External:
      type: object
      properties:
        qualifier:
          type: string
          description: qualifier of external object
          example: supplier
          enum:
          - supplier
          - consignee
        externalId:
          type: string
          description: article identification
          example: "12345678"
        externalDescription:
          $ref: '#/components/schemas/LingualText'
      description: External
    Translation:
      type: object
      properties:
        languageRequested:
          $ref: '#/components/schemas/Language'
        translationResolved:
          $ref: '#/components/schemas/LingualText'
        translationOriginal:
          $ref: '#/components/schemas/LingualText'
      description: the translation object returns a translated text. It shows the requested language, as well as the orignial text. If feasible the origninal text is translated to the requested language. If not feasible, the resolved text contains the English translation
    Article:
      type: object
      properties:
        lineItemNumber:
          type: number
          description: unique customer line item number
          example: 5
        articleId:
          type: number
          description: article identification number
          example: 3
        variant:
          type: string
          description: article variant
          example: "1"
        gtin:
          type: string
          description: GTIN-Number (EAN)
          example: "12345678901234"
        quantity:
          type: number
          description: quantity of article
          example: 2
        articleDescription:
          $ref: '#/components/schemas/LingualText'
        external:
          $ref: '#/components/schemas/External'
        measurement:
          $ref: '#/components/schemas/Measurement'
        reference:
          $ref: '#/components/schemas/ArticleReference'
        logisticsrequirement:
          $ref: '#/components/schemas/LogisticsRequirementsOrderLine'
      description: Article
    GoodsItem:
      type: object
      properties:
        quantity:
          type: number
          description: Quantity of goodsitem
          example: 2
        packageType:
          type: string
          description: package type
          example: EUP
        measurement:
          $ref: '#/components/schemas/Measurement'
        reference:
          $ref: '#/components/schemas/GoodsItemReference'
        article:
          $ref: '#/components/schemas/Article'
      description: Goods Item
    ErrorMessage_logInfo:
      type: object
      properties:
        x-apiId:
          type: string
          description: id to identify the API
          example: statusCustomerPartner
        code:
          type: string
          description: GW coded message
          example: "4711"
        x-correlation-Id:
          type: string
          description: GW log entry id
          example: 1234567-0
      description: structured information for GW support
  securitySchemes:
    oAuth:
      type: oauth2
      description: This API uses OAuth 2 with the implicit grant flow.
      flows:
        implicit:
          authorizationUrl: http://localhost:8887/authorize
          scopes:
            API_LOGISTICS_ORDER_ORDER_STATUS_READ: API_LOGISTICS_ORDER_ORDER_STATUS_READ
            API_LOGISTICS_ORDER_ORDER_CREATE: API_LOGISTICS_ORDER_ORDER_CREATE
            API_LOGISTICS_ORDER_ORDER_READ: API_LOGISTICS_ORDER_ORDER_READ
x-wso2-security:
  apim:
    x-wso2-scopes:
    - key: API_LOGISTICS_ORDER_STATUS_READ
      name: API_LOGISTICS_ORDER_STATUS_READ
      roles: I_CUSAPI_LOGISTICS_ORDER_ORDERS_STATUS_READ,EXTERNAL/I_CUSAPI_LOGISTICS_ORDER_ORDER_STATUS_READ,APPUSER/I_CUSAPI_LOGISTICS_ORDER_ORDER_STATUS_READ
      description: This scope provides access to logistics order status for customer and partner
x-audience: component-internal
x-apiId: logisticsOrderCustomer
x-category: coommon
