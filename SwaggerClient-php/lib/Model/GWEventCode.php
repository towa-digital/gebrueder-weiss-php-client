<?php
/**
 * GWEventCode
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Logistics Order
 *
 * API to create and retrieve logistics orders
 *
 * OpenAPI spec version: 1.0.0
 * Contact: michael.beck@gw-world.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.25
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;
use \Swagger\Client\ObjectSerializer;

/**
 * GWEventCode Class Doc Comment
 *
 * @category Class
 * @description gives a coded status for the order
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class GWEventCode
{
    /**
     * Possible values of this enum
     */
    const RDGW100 = 'RDGW100';
const RDGW165 = 'RDGW165';
const RDGW610 = 'RDGW610';
const RDGW166 = 'RDGW166';
const RDGW180 = 'RDGW180';
const RDGW290 = 'RDGW290';
const RDGW300 = 'RDGW300';
const RDGW400 = 'RDGW400';
const RDGW450 = 'RDGW450';
const RDGW810 = 'RDGW810';
const RDGW820 = 'RDGW820';
const RDGW830 = 'RDGW830';
const RDGW850 = 'RDGW850';
const RDGW860 = 'RDGW860';
const AGW100 = 'AGW100';
const ASGWP05 = 'ASGWP05';
const AGWM09 = 'AGWM09';
const ASGWP10 = 'ASGWP10';
const ASGWP20 = 'ASGWP20';
const ASGWP25 = 'ASGWP25';
const AGWM71 = 'AGWM71';
const AGWI24 = 'AGWI24';
const AGWM24 = 'AGWM24';
const AGWM43 = 'AGWM43';
const AGWM11 = 'AGWM11';
const ASGWP40 = 'ASGWP40';
const AGWM31 = 'AGWM31';
const AGWI10 = 'AGWI10';
const AGWM10 = 'AGWM10';
const AGWM44 = 'AGWM44';
const AGWM73 = 'AGWM73';
const ASGWP50 = 'ASGWP50';
const ASGWP53 = 'ASGWP53';
const ASGWP55 = 'ASGWP55';
const AGWM21 = 'AGWM21';
const AGWM75 = 'AGWM75';
const ASGWP60 = 'ASGWP60';
const AGWM77 = 'AGWM77';
const AGWM13 = 'AGWM13';
const AGWI21 = 'AGWI21';
const AGWM14 = 'AGWM14';
const SGW100 = 'SGW100';
const SGWOEE = 'SGWOEE';
const SGWM09 = 'SGWM09';
const ASGWP30 = 'ASGWP30';
const SGWM33 = 'SGWM33';
const SGWM72 = 'SGWM72';
const SGWOAE = 'SGWOAE';
const SGWOVD = 'SGWOVD';
const SGWM24 = 'SGWM24';
const SGWM10 = 'SGWM10';
const SGWM73 = 'SGWM73';
const SGWO0_A = 'SGWO0A';
const SGWOVA = 'SGWOVA';
const SGWM79 = 'SGWM79';
const SGWOUV = 'SGWOUV';
const SGWORD = 'SGWORD';
const SGWM21 = 'SGWM21';
const SGWM75 = 'SGWM75';
const SGWO0_D = 'SGWO0D';
const SGWM12 = 'SGWM12';
const SGWM77 = 'SGWM77';
const SGWM13 = 'SGWM13';
const SGWM14 = 'SGWM14';
const LGWIN = 'LGWIN';
const LGWIA = 'LGWIA';
const LGWIF = 'LGWIF';
const LGWON = 'LGWON';
const LGWOA = 'LGWOA';
const LGWOF = 'LGWOF';
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::RDGW100,
self::RDGW165,
self::RDGW610,
self::RDGW166,
self::RDGW180,
self::RDGW290,
self::RDGW300,
self::RDGW400,
self::RDGW450,
self::RDGW810,
self::RDGW820,
self::RDGW830,
self::RDGW850,
self::RDGW860,
self::AGW100,
self::ASGWP05,
self::AGWM09,
self::ASGWP10,
self::ASGWP20,
self::ASGWP25,
self::AGWM71,
self::AGWI24,
self::AGWM24,
self::AGWM43,
self::AGWM11,
self::ASGWP40,
self::AGWM31,
self::AGWI10,
self::AGWM10,
self::AGWM44,
self::AGWM73,
self::ASGWP50,
self::ASGWP53,
self::ASGWP55,
self::AGWM21,
self::AGWM75,
self::ASGWP60,
self::AGWM77,
self::AGWM13,
self::AGWI21,
self::AGWM14,
self::SGW100,
self::SGWOEE,
self::SGWM09,
self::ASGWP30,
self::SGWM33,
self::SGWM72,
self::SGWOAE,
self::SGWOVD,
self::SGWM24,
self::SGWM10,
self::SGWM73,
self::SGWO0_A,
self::SGWOVA,
self::SGWM79,
self::SGWOUV,
self::SGWORD,
self::SGWM21,
self::SGWM75,
self::SGWO0_D,
self::SGWM12,
self::SGWM77,
self::SGWM13,
self::SGWM14,
self::LGWIN,
self::LGWIA,
self::LGWIF,
self::LGWON,
self::LGWOA,
self::LGWOF,        ];
    }
}
